# Business: This automatically adds a comment with the time a pull request was closed. This applies to ALL pull requests in the repo

name: Closing PR Comment w timestamp


on:
  pull_request:
    # Only on closed PRs
    types: [closed]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:
    inputs:
      pr_number_manual:
        description: "PR number to use when this action is manually triggered"
        required: true
        type: string

jobs:
  closing-pr-comment-job:
    
    runs-on: ubuntu-latest
    permissions:
      pull-requests: write
    env:
      # TIMESTAMP: $(date +"%Y-%m-%d %H:%M:%S")
      PR_NUMBER: ${{ github.event.pull_request.number }}
      GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
    steps:
      - uses: actions/checkout@v4

      - name: Assess pr_number_manual input
        if: ${{ inputs.pr_number_manual }} != ''
        run: | 
          echo "Job manually started: Setting PR_NUMBER to value of inputs.pr_number_manual (${{ inputs.pr_number_manual }})"
          echo "PR_NUMBER=${{ inputs.pr_number_manual }}" >> $GITHUB_ENV
      # Keep getting Resource not accessible by integration

      - name: Set TIMESTAMP
        id: set-timestamp
        run: echo "TIMESTAMP=$(date +"%Y-%m-%d %H:%M:%S")" >> $GITHUB_ENV

      - name: Closing comment on PR
        id: closing_comment_step
        run: |
          echo "Adding closing comment to PR Number: $PR_NUMBER"
          COMMENT="This pull request was closed on ${{ env.TIMESTAMP }}."
          echo "COMMENT = $COMMENT"
          echo "TIMESTAMP = ${{ env.TIMESTAMP }}"
          COMMENT_URL="https://api.github.com/repos/${{github.repository}}/issues/NUM/comments"
          # Replace "NUM" with with the PR_NUMBER env var
          COMMENT_URL="${COMMENT_URL/NUM/$PR_NUMBER}"
          
          # echo $COMMENT_URL
          # # -H = custom curl header, -X used to specify HTTP method, -d indicates the data to send
          RESPONSE=$(curl -s -H "Authorization: token ${GITHUB_TOKEN}" -X POST $COMMENT_URL -d "{\"body\":\"$COMMENT\"}")
          echo $RESPONSE
          # echo "STATUS_CODE = $STATUS_CODE.status"
          # echo "RESPONSE=$RESPONSE" >> $GITHUB_OUTPUT
          # echo "RESPONSE=$RESPONSE" >> $GITHUB_ENV
      - name: Print Status Code 
        run: |
          # echo "Status code = ${{ steps.closing_comment_step.RESPONSE }}"
          # echo "Status code = ${{ env.RESPONSE.status }}"
